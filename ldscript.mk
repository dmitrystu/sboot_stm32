# This file is the part of the STM32 secure bootloader
#
# Copyright ©2016 Dmitry Filimonchuk <dmitrystu[at]gmail[dot]com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#   http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ROMSTART ?= 0x08000000
ROMLEN   ?= 256K
RAMSTART ?= 0x20000000
RAMLEN   ?= 32K
APPALIGN ?= 0x0800
OUTFILE  ?= script.ld

define LDSCRIPT
OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
OUTPUT_ARCH(arm)
MEMORY
{
ROM (rx) : ORIGIN = $(ROMSTART), LENGTH = ${ROMLEN}
RAM (rwx) : ORIGIN = $(RAMSTART), LENGTH = $(RAMLEN)
}
SECTIONS
{
.text :
{
KEEP(*(.isr_vector))
*(.rodata.usbd_devfs)
*(.rodata.usbd_devfs_asm)
*(.rodata.usbd_otgfs)
*(.rodata_usbd_otghs)
*(.text.usbd_poll)
*(.text*)
*(.rodata*)
} > ROM
. = ALIGN(4);
__etext = .;
. = . + SIZEOF(.data);
__app_start = ALIGN($(APPALIGN));
.data : AT (__etext)
{
. = ALIGN(4);
__data_start__ = .;
*(.data*)
. = ALIGN(4);
__data_end__ = .;
} > RAM
.bss (NOLOAD):
{
. = ALIGN(4);
__bss_start__ = .;
*(.bss*)
*(COMMON)
. = ALIGN(4);
__bss_end__ = .;
} > RAM
PROVIDE(__romsize = LENGTH(FLASH));
PROVIDE(__romend = ORIGIN(ROM) + LENGTH(ROM));
PROVIDE(__stack = ORIGIN(RAM) + LENGTH(RAM) - 4);
}
endef

.PHONY: all $(OUTFILE)

all: $(OUTFILE)
	$(file >> $<,$(LDSCRIPT))

$(OUTFILE):
	@echo Building linker script
	@echo '/* This file is automatically generated */' > $@
